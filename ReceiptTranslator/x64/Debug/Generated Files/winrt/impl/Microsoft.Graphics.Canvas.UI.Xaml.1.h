// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220531.1

#pragma once
#ifndef WINRT_Microsoft_Graphics_Canvas_UI_Xaml_1_H
#define WINRT_Microsoft_Graphics_Canvas_UI_Xaml_1_H
#include "winrt/impl/Microsoft.Graphics.Canvas.0.h"
#include "winrt/impl/Microsoft.Graphics.Canvas.UI.Xaml.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Canvas::UI::Xaml
{
    struct __declspec(empty_bases) ICanvasControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasControl>,
        impl::require<winrt::Microsoft::Graphics::Canvas::UI::Xaml::ICanvasControl, winrt::Microsoft::Graphics::Canvas::ICanvasResourceCreator, winrt::Microsoft::Graphics::Canvas::ICanvasResourceCreatorWithDpi>
    {
        ICanvasControl(std::nullptr_t = nullptr) noexcept {}
        ICanvasControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICanvasDrawEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasDrawEventArgs>
    {
        ICanvasDrawEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICanvasDrawEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICanvasDrawEventArgsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasDrawEventArgsFactory>
    {
        ICanvasDrawEventArgsFactory(std::nullptr_t = nullptr) noexcept {}
        ICanvasDrawEventArgsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICanvasImageSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasImageSource>,
        impl::require<winrt::Microsoft::Graphics::Canvas::UI::Xaml::ICanvasImageSource, winrt::Microsoft::Graphics::Canvas::ICanvasResourceCreator, winrt::Microsoft::Graphics::Canvas::ICanvasResourceCreatorWithDpi>
    {
        ICanvasImageSource(std::nullptr_t = nullptr) noexcept {}
        ICanvasImageSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICanvasImageSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasImageSourceFactory>
    {
        ICanvasImageSourceFactory(std::nullptr_t = nullptr) noexcept {}
        ICanvasImageSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICanvasRegionsInvalidatedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasRegionsInvalidatedEventArgs>
    {
        ICanvasRegionsInvalidatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ICanvasRegionsInvalidatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICanvasSwapChainPanel :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasSwapChainPanel>
    {
        ICanvasSwapChainPanel(std::nullptr_t = nullptr) noexcept {}
        ICanvasSwapChainPanel(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICanvasVirtualControl :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasVirtualControl>,
        impl::require<winrt::Microsoft::Graphics::Canvas::UI::Xaml::ICanvasVirtualControl, winrt::Microsoft::Graphics::Canvas::ICanvasResourceCreator, winrt::Microsoft::Graphics::Canvas::ICanvasResourceCreatorWithDpi>
    {
        ICanvasVirtualControl(std::nullptr_t = nullptr) noexcept {}
        ICanvasVirtualControl(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICanvasVirtualImageSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasVirtualImageSource>,
        impl::require<winrt::Microsoft::Graphics::Canvas::UI::Xaml::ICanvasVirtualImageSource, winrt::Microsoft::Graphics::Canvas::ICanvasResourceCreator, winrt::Microsoft::Graphics::Canvas::ICanvasResourceCreatorWithDpi>
    {
        ICanvasVirtualImageSource(std::nullptr_t = nullptr) noexcept {}
        ICanvasVirtualImageSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICanvasVirtualImageSourceFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICanvasVirtualImageSourceFactory>
    {
        ICanvasVirtualImageSourceFactory(std::nullptr_t = nullptr) noexcept {}
        ICanvasVirtualImageSourceFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
