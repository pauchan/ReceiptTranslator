// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220531.1

#pragma once
#ifndef WINRT_Microsoft_Graphics_Canvas_UI_Composition_0_H
#define WINRT_Microsoft_Graphics_Canvas_UI_Composition_0_H
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Canvas
{
    struct CanvasDevice;
    struct CanvasDrawingSession;
}
WINRT_EXPORT namespace winrt::Microsoft::UI::Composition
{
    struct CompositionDrawingSurface;
    struct CompositionGraphicsDevice;
    struct Compositor;
}
WINRT_EXPORT namespace winrt::Windows::Foundation
{
    struct Rect;
    struct Size;
}
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Canvas::UI::Composition
{
    struct ICanvasCompositionStatics;
    struct CanvasComposition;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Graphics::Canvas::UI::Composition::ICanvasCompositionStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Graphics::Canvas::UI::Composition::CanvasComposition>{ using type = class_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Canvas::UI::Composition::CanvasComposition> = L"Microsoft.Graphics.Canvas.UI.Composition.CanvasComposition";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Canvas::UI::Composition::ICanvasCompositionStatics> = L"Microsoft.Graphics.Canvas.UI.Composition.ICanvasCompositionStatics";
    template <> inline constexpr guid guid_v<winrt::Microsoft::Graphics::Canvas::UI::Composition::ICanvasCompositionStatics>{ 0x162DEB43,0x1CF5,0x46F8,{ 0xA0,0xAF,0x35,0x6B,0x23,0x15,0x8F,0x92 } }; // 162DEB43-1CF5-46F8-A0AF-356B23158F92
    template <> struct abi<winrt::Microsoft::Graphics::Canvas::UI::Composition::ICanvasCompositionStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateCompositionGraphicsDevice(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GetCanvasDevice(void*, void**) noexcept = 0;
            virtual int32_t __stdcall SetCanvasDevice(void*, void*) noexcept = 0;
            virtual int32_t __stdcall CreateDrawingSession(void*, void**) noexcept = 0;
            virtual int32_t __stdcall CreateDrawingSessionWithUpdateRect(void*, winrt::Windows::Foundation::Rect, void**) noexcept = 0;
            virtual int32_t __stdcall CreateDrawingSessionWithUpdateRectAndDpi(void*, winrt::Windows::Foundation::Rect, float, void**) noexcept = 0;
            virtual int32_t __stdcall Resize(void*, winrt::Windows::Foundation::Size) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Graphics_Canvas_UI_Composition_ICanvasCompositionStatics
    {
        auto CreateCompositionGraphicsDevice(winrt::Microsoft::UI::Composition::Compositor const& compositor, winrt::Microsoft::Graphics::Canvas::CanvasDevice const& canvasDevice) const;
        auto GetCanvasDevice(winrt::Microsoft::UI::Composition::CompositionGraphicsDevice const& graphicsDevice) const;
        auto SetCanvasDevice(winrt::Microsoft::UI::Composition::CompositionGraphicsDevice const& graphicsDevice, winrt::Microsoft::Graphics::Canvas::CanvasDevice const& canvasDevice) const;
        auto CreateDrawingSession(winrt::Microsoft::UI::Composition::CompositionDrawingSurface const& drawingSurface) const;
        auto CreateDrawingSession(winrt::Microsoft::UI::Composition::CompositionDrawingSurface const& drawingSurface, winrt::Windows::Foundation::Rect const& updateRect) const;
        auto CreateDrawingSession(winrt::Microsoft::UI::Composition::CompositionDrawingSurface const& drawingSurface, winrt::Windows::Foundation::Rect const& updateRectInPixels, float dpi) const;
        auto Resize(winrt::Microsoft::UI::Composition::CompositionDrawingSurface const& drawingSurface, winrt::Windows::Foundation::Size const& sizeInPixels) const;
    };
    template <> struct consume<winrt::Microsoft::Graphics::Canvas::UI::Composition::ICanvasCompositionStatics>
    {
        template <typename D> using type = consume_Microsoft_Graphics_Canvas_UI_Composition_ICanvasCompositionStatics<D>;
    };
}
#endif
